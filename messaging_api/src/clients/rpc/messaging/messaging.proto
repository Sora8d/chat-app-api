syntax= "proto3";

option go_package= "github.com/flydevs/chat-app-api/users-api/src/clients/rpc/messaging";

package flydev_chat_app_messaging;

    service MessagingProtoInterface{
        rpc CreateConversation(Conversation) returns (UuidMsg) {}
        
        //Changed, now instead of returning conversations alone it returns an object with a conversation an its participants inside.
        //Later should be fetched directly through JWT info.
        rpc GetConversationsByUser(Uuid) returns (ArrayConversationResponse) {}

        rpc UpdateConversationInfo(Conversation) returns (UpdateConversationResponse) {}
        
        
        rpc CreateMessage(Message) returns (UuidMsg) {}
        //Later change userUuid to use JWT info.
        rpc GetMessagesByConversation(MessageRequest) returns (ArrayMessageResponse) {}
        rpc UpdateMessage(Message) returns (MessageMsgResponse) {}
        
        rpc CreateUserConversation(UserConversation) returns (UuidMsg) {}
        /*
        Already disposed of
        rpc GetConversation(Uuid) returns (GetConversationResponse) {} I dont think this one is needed either

        rpc UpdateConversationLastMsg(UuidandMessageUuid) returns (ConvMsgResponse) {} //happens automatically afer every CreateMessage
        rpc GetMessage(Uuid) returns (MessageMsgResponse) {} //Not needed
        rpc GetMessagesByAuthor(Uuid) returns (ArrayMessageResponse) {} //Not needed
     
        Now this all occurs when fetching conversations
        rpc GetUserConversation(Uuid) returns (UCMsgResponse) {} //Not needed
        rpc GetUserConversationsForUser(Uuid) returns (ArrayUserConversationResponse) {} //Already happens in GetConversationsByUser
        rpc GetUserConversationsForConversation(Uuid) returns (ArrayUserConversationResponse) {} //blackbox, this comes with Get Conversation
    
        rpc UpdateUserConversation(UuidandMessageUuid) returns (UCMsgResponse) {} //This one now happens after every GetMessages
        */
 }
     //  mensaje - post- productor de eventos- llama a kafka - 

 // Conversations-------
 message Conversation{
     Uuid uuid =1;
     int32 type =2;
     float created_at= 3;
     string last_msg_uuid= 4;
     string name =5;
    string description =6;
    string avatar_url=7;
}

message UserConversation{
    Uuid uuid =1;
    Uuid user_uuid =2;
    Uuid conversation_uuid=3;
    Uuid last_access_uuid = 4;
    float created_at =5;
}

message ConversationAndParticipants{
    Conversation conversation =1;
    UserConversation user_conversation =2;
    repeated UserConversation participants =3;
}

message UpdateConversationResponse{
    Conversation conversation =1;
    Svr_msg msg=2;
}

message GetConversationResponse{
    ConversationAndParticipants conversation =1;
    Svr_msg msg =2;
}

message ArrayConversationResponse{
    repeated ConversationAndParticipants conversations = 1;
    Svr_msg msg =2;
}

// ----------
// Messages
message Message{
    Uuid uuid =1;
    Uuid conversation_uuid =2;
    Uuid author_uuid=3;
    string text=4;
    float created_at=5;
    float updated_at=6;
}

message MessageRequest{
    Uuid user_uuid =1;
    Uuid conversation_uuid =2;
}

message MessageMsgResponse{
    Message message =1;
    Svr_msg msg=2;
}
message ArrayMessageResponse{
    repeated Message message = 1;
    Svr_msg msg=2;
}
//----
//other
message Uuid {
    string uuid =1;
}

message Svr_msg{
    int64 status=1;
    string message=2;
}

message UuidMsg{
    Uuid uuid =1;
    Svr_msg msg=2;
}
message UuidandMessageUuid{
    Uuid og_entity =1;
    Uuid message =2;
}