syntax= "proto3";

option go_package= "github.com/flydevs/chat-app-api/users-api/src/clients/rpc/messaging";

service MessagingProtoInterface{
    rpc CreateConversation(Conversation) returns (UuidMsg) {}
    rpc GetConversation(Uuid) returns (ConvMsgResponse) {}
    rpc GetConversationsByUser(Uuid) returns (ArrayConversationResponse) {}
    rpc UpdateConversationLastMsg(UuidandMessageUuid) returns (ConvMsgResponse) {}
    rpc UpdateConversationInfo(Conversation) returns (ConvMsgResponse) {}

    rpc CreateMessage(Message) returns (UuidMsg) {}
    rpc GetMessage(Uuid) returns (MessageMsgResponse) {}
    rpc GetMessagesByAuthor(Uuid) returns (ArrayMessageResponse) {}
    rpc GetMessagesByConversation(Uuid) returns (ArrayMessageResponse) {}
    rpc UpdateMessage(Message) returns (MessageMsgResponse) {}

    rpc CreateUserConversation(UserConversation) returns (UuidMsg) {}
    rpc GetUserConversation(Uuid) returns (UCMsgResponse) {}
    rpc GetUserConversationsForUser(Uuid) returns (ArrayUserConversationResponse) {}
    rpc GetUserConversationsForConversation(Uuid) returns (ArrayUserConversationResponse) {}
    rpc UpdateUserConversation(UuidandMessageUuid) returns (UCMsgResponse) {}
 }

 
 message Conversation{
     Uuid uuid =1;
     int32 type =2;
     float created_at= 3;
     string last_msg_uuid= 4;
     string name =5;
    string description =6;
    string avatar_url=7;
}
message ArrayConversationResponse{
    repeated Conversation conversation = 1;
    Svr_msg msg =2;
}

message Message{
    Uuid uuid =1;
    Uuid conversation_uuid =2;
    Uuid author_uuid=3;
    string text=4;
    float created_at=5;
    float updated_at=6;
}

message Svr_msg{
    int64 status=1;
    string message=2;
}

message UuidMsg{
    Uuid uuid =1;
    Svr_msg msg=2;
}

message ConvMsgResponse{
    Conversation convo =1;
    Svr_msg msg =2;
}

message UserConversation{
    Uuid uuid =1;
    Uuid user_uuid =2;
    Uuid conversation_uuid=3;
    Uuid last_access_uuid = 4;
    float created_at =5;
}
message UCMsgResponse{
    UserConversation user_conversation =1;
    Svr_msg msg =2;
}

message ArrayUserConversationResponse{
    repeated UserConversation user_conversation =1;
    Svr_msg msg=2;
}

message MessageMsgResponse{
    Message message =1;
    Svr_msg msg=2;
}

message ArrayMessageResponse{
    repeated Message message = 1;
    Svr_msg msg=2;
}


message Uuid {
    string uuid =1;
}

message UuidandMessageUuid{
    Uuid og_entity =1;
    Uuid message =2;
}